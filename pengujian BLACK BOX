package Nomor4;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Path;

public class Tester {

    public static void main(String[] args) {
        String sDir = "src/Nomor4/";
        String ssourceCode = "Matriks.java";
        String sinput = "input.txt";
        String soutput = "output.txt";

        try {
            String output = Files.readString(Path.of(sDir + soutput));

            ProcessBuilder processBuilder = new ProcessBuilder();
            processBuilder.directory(new File(sDir));
            processBuilder.command("cmd.exe", "/c", "java " + ssourceCode);
            processBuilder.redirectInput(new File(sDir + sinput));

            Process proses = processBuilder.start();
            proses.waitFor();

            String outputTesting = exractOutput(proses);
            String errorTesting = exractError(proses);

            if (errorTesting.length() > 0) {
                System.out.println("RESULT");
                System.out.println("------------------------------------------------------");
                System.out.println("Ditemukan Program eror");
                System.out.println(errorTesting);
                System.out.println("------------------------------------------------------");
            } else {
                System.out.println("RESULT");
                System.out.println("------------------------------------------------------");
                System.out.println("Program Berhasil");
                System.out.println(outputTesting);
                System.out.println("------------------------------------------------------");
                if (output.trim().endsWith(outputTesting.trim())) {
                    System.out.println("VALID : Output program sudah sesuai dengan yang seharusnya");
                } else {
                    System.out.println("TIDAK VALID : Output program tidak sesuai dengan yang seharusnya");
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private static String exractOutput(Process proses) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(proses.getInputStream()));
        StringBuffer sb = new StringBuffer();
        String line;
        while ((line =reader.readLine())!=null)  {
            sb.append(line + "\n");
        }
        return sb.toString();
    }

    private static String exractError(Process proses) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(proses.getErrorStream()));
        StringBuffer sb = new StringBuffer();
        String line;
        while ((line =reader.readLine())!=null)  {
            sb.append(line + "\n");
        }
        return sb.toString();
    }
    }

